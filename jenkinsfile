#!groovy
@Library('jenkinslib') _

def tools = new org.devops.tools

pipeline {
    agent { node { label "master"   //制定运行的节点标签

}
    }
options {
timestamps()
skipDefaultCheckout()    //删除模式checkout  scm语句
disableConcurrentBuilds()  //禁止并行
timeout(time:1,unit: 'HOURS')    //流水线超时设置1h
}
stages{


    //下载代码
    stage("GetCode"){//阶段名称
        when { environment name: 'test', value: 'abcd' }
        steps{ //步骤
        
            timeout(time:5, unit:"MINUTES"){
                    script{//填写运行代码
                            println('获取代码')}
}}}
    //构建
    stage("Build"){
        steps{
            timeout(time:5, unit:"MINUTES"){
                println('应用打包')
            }
        }
    }
    //代码扫描
    stage("CodeScan"){
        steps{
        timeout(time:30, unit:"MINUTES"){
            script{
                println('代码扫描')
                tools.PrintMew("this is my lib!")
            }
        }
    }
    }
    stage("Exmaple"){
        steps{
            script{
                input id: 'Test', message: '我们是否要继续', ok: '是', parameters: [choice(choices: ['a', 'b'], description: '', name: 'test')], submitter: 'admin'
            }
        }
    }
    
}
    //构建后的操作
    post {
        always{
            script{
                println("always")
            }
        }
        success{
            script{
                currentBuild.description += "\n 构建成功！"

            }}
            failure{
                script{
                    currentBuild.description += "\n 构建失败！"
                }
            }
            aborted {
                script{
                    currentBuild.description += "\n 构建取消！"
                }
            }
        }
    }
